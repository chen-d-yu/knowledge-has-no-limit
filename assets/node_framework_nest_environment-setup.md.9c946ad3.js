import{_ as a,o as n,c as e,L as p}from"./chunks/framework.a932675b.js";const b=JSON.parse('{"title":"搭建环境","description":"","frontmatter":{"outline":[1,3],"typora-copy-images-to":"./assets"},"headers":[],"relativePath":"node/framework/nest/environment-setup.md","lastUpdated":1725964165000}'),l={name:"node/framework/nest/environment-setup.md"};function o(t,s,c,r,i,d){return n(),e("div",null,s[0]||(s[0]=[p(`<h1 id="搭建环境" tabindex="-1">搭建环境 <a class="header-anchor" href="#搭建环境" aria-label="Permalink to &quot;搭建环境&quot;">​</a></h1><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">Node 版本要求</p><p>Nest CLI 需要 Node.js 版本 &gt;= 16</p></div><p>安装 <code>NPM</code> 后，在终端使用以下命令安装 <code>Nest CLI</code> ：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">i</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">@nestjs/cli</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>当然，如果你不想安装 <code>Nest CLI</code> ，也可以使用 <code>npx</code> 来代替脚手架</p><h2 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h2><p>在终端使用 CLI 命令创建新项目</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nest</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">new</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">project-name</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># or</span></span>
<span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">nest</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">new</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">project-name</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TypeScript</p><p><code>nest</code> 项目默认使用 <code>TypeScript</code> 模板创建新项目，若要使用更加严格的 TS 功能，请将 <code>--strict</code> 传递给 <code>nest new</code> 命令</p></div><p><code>project-name</code> 目录将会被创建，并会在目录中生成几个核心的文件。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">src</span></span>
<span class="line"><span style="color:#babed8;">  ├── app.controller.spec.ts</span></span>
<span class="line"><span style="color:#babed8;">  ├── app.controller.ts</span></span>
<span class="line"><span style="color:#babed8;">  ├── app.module.ts</span></span>
<span class="line"><span style="color:#babed8;">  ├── app.service.ts</span></span>
<span class="line"><span style="color:#babed8;">  └── main.ts</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><table><thead><tr><th>main.ts</th><th><code>main.ts</code> 包含一个异步函数，是整个应用的主入口。</th></tr></thead><tbody><tr><td>app.module.ts</td><td>应用程序根模块，一个应用至少需要一个根模块</td></tr><tr><td>app.service.ts</td><td>提供基本服务的模块</td></tr><tr><td>app.controller.ts</td><td>具有路由的基本控制器，控制 <code>http</code> 请求响应的模块</td></tr></tbody></table><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">NestFactory</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@nestjs/core</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">AppModule</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./app.module</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">bootstrap</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">app</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">NestFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">AppModule</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">listen</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">3000</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">bootstrap</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>调用 <code>NestFactory.create</code> 静态方法会返回一个 <code>Nestjs</code> 应用实例，根模块作为参数传递，监听 3000 端口，就开启了一个最简单的 <code>web</code> 服务器。</p>`,15)]))}const D=a(l,[["render",o]]);export{b as __pageData,D as default};
